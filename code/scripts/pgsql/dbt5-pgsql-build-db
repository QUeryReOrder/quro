#!/bin/sh

#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright (C) 2005-2010 Mark Wong & Open Source Development Labs, Inc.
#

if [ "x${EGENDIR}" = "x" ]; then
	echo "EGENDIR not defined, specify EGen's directory."
	exit 1
fi

if [ "x${DBNAME}" = "x" ]; then
	echo "DBNAME not defined."
	exit 1
fi

usage()
{
	echo "Usage:"
	echo "    build-db [option]"
	echo "    build-db -h"
	echo "Options:"
	echo "    -c <customers>"
	echo "        Number of customers (total in the database)"
	echo "    -i <customers>"
	echo "        Number of customers (for this instance)"
	echo "    -l <port>"
	echo "        database port (default=5432)"
	echo "    -p <database_parameters>"
	echo "        PostgreSQL database parameters"
	echo "    -r"
	echo "        Drop existing database before building a new database"
	echo "    -s <scale factor>"
	echo "        Scale factor (customers per 1 trtps)"
	echo "    -t"
	echo "        Use tablespaces"
	echo "    -w <days>"
	echo -n "        Number of Workdays (8-hour days) of " 
	echo "initial trades to populate"
}

REBUILD_DB=0

CUSTOMERS_INSTANCE=1000
CUSTOMERS_TOTAL=1000
#
# I don't know what the smallest SCALE_FACTOR is, which is what I would like to
# set there, but 500 is definitely smaller than 1.
#
SCALE_FACTOR=500
WORKDAYS=1

while getopts "c:hi:l:p:rs:tw:" OPT; do
	case ${OPT} in
	c)
		CUSTOMERS_TOTAL=${OPTARG}
		;;
	h)
		usage
		exit 0
		;;
	i)
		CUSTOMERS_INSTANCE=${OPTARG}
		;;
	l)
		PORT=${OPTARG}
		;;
	p)
		PARAMETERS=${OPTARG}
		;;
	r)
		REBUILD_DB=1
		;;
	s)
		SCALE_FACTOR=${OPTARG}
		;;
	t)
		TABLESPACES_FLAG="-t"
		;;
	w)
		WORKDAYS=${OPTARG}
		;;
	esac
done

if [ ! "x${PORT}" = "x" ]; then
	PORTARG="-p ${PORT}"
	EGENPORT="port=${PORT}"
fi

if [ ${REBUILD_DB} -eq 1 ]; then
	echo "Restarting the database to reset database parameters..."
	dbt5-pgsql-stop-db
	dbt5-pgsql-start-db -p "${PARAMETERS}" || exit 1
	dbt5-pgsql-drop-db ${PORTARG}
fi

dbt5-pgsql-create-db ${PORTARG} || exit 1

#
# Stop and restart the database so we get the parameters we want when we start
# loading the database.
#
dbt5-pgsql-stop-db
dbt5-pgsql-start-db -p "${PARAMETERS}" || exit 1

dbt5-pgsql-create-tables ${PORTARG} ${TABLESPACES_FLAG} || exit 1
(cd ${EGENDIR} && \
		bin/EGenLoader -l CUSTOM -f ${SCALE_FACTOR} -w ${WORKDAYS} \
		-c ${CUSTOMERS_INSTANCE} -t ${CUSTOMERS_TOTAL} \
		-p "dbname=${DBNAME} ${EGENPORT}") || exit 1
dbt5-pgsql-create-indexes ${PORTARG} ${TABLESPACES_FLAG} || exit 1
dbt5-pgsql-load-stored-procs -c ${PORTARG} || exit 1
psql ${PORTARG} -e -d ${DBNAME} -c "SELECT setseed(0);" || exit 1
#
# VACUUM FULL ANALYZE: Build optimizer statistics for newly-created
# tables. The VACUUM FULL is probably unnecessary; we want to scan the
# heap and update the commit-hint bits on each new tuple, but a regular
# VACUUM ought to suffice for that.
#
vacuumdb ${PORTARG} -z -f -d ${DBNAME} || exit 1
