/******************************************************************************
*	(c) Copyright 2004, Hewlett Packard
*	Provided to the TPC under license.
******************************************************************************/

/******************************************************************************
*
*	Original Author:	Gregory Dake
*
*	Contributors:		Cecil Reames
*						Doug Johnson
*
*	Description:		EGenDriverCE class to generate transaction types for
*						execution
*
******************************************************************************/

#ifndef CE_TXN_MIX_GENERATOR_H
#define CE_TXN_MIX_GENERATOR_H

#include "EGenUtilities_stdafx.h"
#include "DriverParamSettings.h"

namespace TPCE
{

class CCETxnMixGenerator
{
private:
	PParameterSettings	m_pParameterSettings;
	CRandom				m_rnd;

	// Transaction mixes are expressed out of a total of 1000.
	//
	// NOTE that Trade-Result and Market-Feed are not generated by this class
	// as possible runtime transaction types. They happen as an automatic
	// by-product of Trade-Order transactions.

	INT32	m_MarketFeedMix;
	INT32	m_TradeResultMix;
	INT32	m_TransactionMixTotal;
	INT32	m_TransactionMixTotalNoMarketFeedNoTradeResult;

	INT32	m_BrokerVolumeMixLimit;
	INT32	m_CustomerPositionMixLimit;
	INT32	m_MarketWatchMixLimit;
	INT32	m_SecurityDetailMixLimit;
	INT32	m_TradeLookupMixLimit;
	INT32	m_TradeOrderMixLimit;
	INT32	m_TradeStatusMixLimit;
	INT32	m_TradeUpdateMixLimit;

public:
	const static INT32 INVALID_TRANSACTION_TYPE	= -1;
	const static INT32 SECURITY_DETAIL			=  0;
	const static INT32 BROKER_VOLUME			=  1;
	const static INT32 CUSTOMER_POSITION		=  2;
	const static INT32 MARKET_WATCH				=  3;
	const static INT32 TRADE_STATUS				=  4;
	const static INT32 TRADE_LOOKUP				=  5;
	const static INT32 TRADE_ORDER				=  6;
	const static INT32 TRADE_UPDATE				=  7;
	//Trade-Result and Market-Feed are included for completness.
	const static INT32 MARKET_FEED				=  8;
	const static INT32 TRADE_RESULT				=  9;

	CCETxnMixGenerator( PParameterSettings pParameterSettings );
	CCETxnMixGenerator( PParameterSettings pParameterSettings, RNGSEED RNGSeed );

	RNGSEED	GetRNGSeed( void );
	void	SetRNGSeed( RNGSEED RNGSeed );

	void	UpdateSettings( void );
	int		GenerateNextTxnType( void );
};

}	// namespace TPCE

#endif	// #ifndef CE_TXN_MIX_GENERATOR_H
